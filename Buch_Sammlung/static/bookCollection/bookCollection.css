*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  overscroll-behavior: contain;
}

/* setup for light-/dark-mode */
:root {
  /* light-mode */
  --bg-color: #f5f5f5;
  --txt-color: #0f1626;
  --border-clr: #000;

  /* dark-mode
  --bg-color: #0e0b16;
  --txt-color: #e7dfdd;
  --border-clr: #a239ca; */
}

body {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  background-color: var(--bg-color);
}

/* natural direction is row */
.flexCentering {
  display: flex;
  place-items: center;
}

/* natural direction is column */
.gridCentering {
  display: grid;
  place-items: center;
}

.navbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  height: 5em;
}

.amountResults {
  cursor: pointer;
}

i {
  /* For the fontawesome icons */
  background: var(--bg-color);
  color: var(--txt-color);
}

input.hiddenBox ~ label > span {
  margin: 0 0.5em;
  color: var(--txt-color);
}

input.hiddenBox ~ label {
  cursor: pointer;
}

input.hiddenBox {
  display: none;
}
div.visibleBox {
  --h: 1em;
  display: inline-block;
  position: relative;
  width: 2em;
  height: var(--h);
  background: var(--bg-color);
  border: 1px solid var(--border-clr);
  border-radius: 100vw;
  box-shadow: inset 0.05em 0.05em 5px var(--border-clr);
}
div.visibleBox::after {
  position: absolute;
  top: 50%;  /* Feels more centered than top of 0 */
  left: 0;
  content: "";
  height: var(--h);
  aspect-ratio: 1 / 1;
  background: var(--border-clr);
  border-radius: 100%;
  transform: translateY(-50%) scale(0.65);
  transition: transform 250ms ease-in-out;
}
input.hiddenBox:checked ~ label div.visibleBox::after {
  transform: translate(95%, -50%) scale(0.65);
}

.booksContainer {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  justify-content: center;
}

.bookTile {
  font-size: 1.25rem;
  position: relative;
  display: flex;
  align-items: center;
  width: 22rem;
  padding: 0.5em;
  margin: 0.5em;
  color: var(--txt-color);
  background: var(--bg-color);
  border: 2px solid var(--border-clr);
  overflow: hidden;  /* disable for pseudo-element-hover */
  transition: transform 250ms;
}

.bookTile:hover {
  transform: scale(1.03);
}

/* to have a transform-based hover-animation */
/* .bookTile::after {
  --pseudo-border: -2px;
  content: "";
  position: absolute;
  top: var(--pseudo-border);
  bottom: var(--pseudo-border);
  right: var(--pseudo-border);
  left: var(--pseudo-border);
  background: red;
  z-index: -1;
  transition: transform 500ms ease-in 0ms;
}

.bookTile:hover::after {
  transform: scale(1.02);
} */

.bookInfo {
  margin-left: 0.5em;
}

.bookInfo > p + p {
  margin-top: 0.25em;
}

.bookImage {
  display: block;
  width: 50%;
}

.standOutish {
  font-weight: 700;
}

.detailsOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(100, 100, 100, 0.7);
  z-index: 1000;
  opacity: 0;
  pointer-events: none;
}

.detailsOverlay.visible {
  pointer-events: initial;
  opacity: 1;
}

.detailsBg {
  position: relative;
  background: var(--bg-color);
  height: 80%;
  width: 70%;
  padding: 0.5em;
  min-width: 20ch;
  overflow-y: auto;
}

.detailsImage {
  display: block;
  width: 100%;
}

.detailsImageWrap {
  margin-bottom: 1rem;
}

.detailsInfos {
  font-size: 2rem;
  color: var(--txt-color);
}

.detailsInfos > span + p {
  margin-top: 0.15em;
  margin-bottom: 0.5em;
}

.detailsInfos > p {
  margin-left: 0.5em;
}

.detailsSummary {
  white-space: pre-line;
}

.overlayCloseButton {
  position: relative;
  margin-top: 4rem;
  width: 4rem;
  height: 4rem;
  background: var(--bg-color);
  border: 0.2rem solid var(--bg-color);
  border-radius: 100%;
  overflow: hidden;
}

.overlayCloseButton::before,
.overlayCloseButton::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 0.5rem;
  background: var(--txt-color);
  left: 0;
  top: 50%;
}

.overlayCloseButton::after {
  transform: translateY(-50%) rotate(45deg);
}

.overlayCloseButton::before {
  transform: translateY(-50%) rotate(-45deg);
}